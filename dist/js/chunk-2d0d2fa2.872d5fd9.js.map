{"version":3,"sources":["webpack:///./src/views/CreateComment.vue?b640","webpack:///./src/constants/comment-graphql.js","webpack:///src/views/CreateComment.vue","webpack:///./src/views/CreateComment.vue?4e26","webpack:///./src/views/CreateComment.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","row","wrap","xs12","sm6","offset-sm3","value","alertDisplay","type","transition","outline","_v","ref","lazy-validation","model","callback","$$v","valid","expression","rules","titleRules","counter","label","required","title","contentsRules","flat","contents","disabled","on","click","createPost","clear","staticClass","headers","items","comments","hide-actions","loading","progress","scopedSlots","_u","key","fn","props","_s","_f","item","createdAt","slot","color","indeterminate","staticRenderFns","ALL_COMMENTS","gql","_templateObject","CREATE_COMMENT","_templateObject2","_templateObject3","_templateObject4","CreateCommentvue_type_script_lang_js_","name","data","v","length","text","error","methods","_this","$refs","form","validate","$apollo","mutate","mutation","variables","then","queries","fetchMore","updateQuery","previousResult","_ref","fetchMoreResult","showAlert","catch","reset","self","setTimeout","apollo","views_CreateCommentvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0d2fa2.872d5fd9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('section',[_c('v-alert',{attrs:{\"value\":_vm.alertDisplay,\"type\":\"success\",\"transition\":\"slide-y-transition\",\"outline\":\"\"}},[_vm._v(\"\\n          Comment was successful\\n        \")]),_c('v-card',[_c('v-container',[_c('h1',[_vm._v(\"CommentForm\")]),_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-text-field',{attrs:{\"rules\":_vm.titleRules,\"counter\":20,\"label\":\"Title\",\"required\":\"\"},model:{value:(_vm.title),callback:function ($$v) {_vm.title=$$v},expression:\"title\"}}),_c('v-textarea',{attrs:{\"rules\":_vm.contentsRules,\"label\":\"Contents\",\"required\":\"\",\"flat\":\"\",\"counter\":\"\"},model:{value:(_vm.contents),callback:function ($$v) {_vm.contents=$$v},expression:\"contents\"}}),_c('v-btn',{attrs:{\"disabled\":!_vm.valid},on:{\"click\":_vm.createPost}},[_vm._v(\"\\n                submit\\n              \")]),_c('v-btn',{on:{\"click\":_vm.clear}},[_vm._v(\"clear\")])],1)],1)],1)],1)])],1),_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":_vm.comments,\"hide-actions\":\"\",\"loading\":_vm.progress},scopedSlots:_vm._u([{key:\"items\",fn:function(props){return [_c('td',[_vm._v(_vm._s(_vm._f(\"moment\")(props.item.createdAt,\"YYYY-MM-DD HH:MM:SS\")))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.title))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.contents))])]}}])},[_c('v-progress-linear',{attrs:{\"slot\":\"progress\",\"color\":\"blue\",\"indeterminate\":\"\"},slot:\"progress\"})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import gql from 'graphql-tag'\n\n// すべてのコメントを取得\nexport const ALL_COMMENTS = gql`\n    query allComments {\n        comments(where: {status: PUBLISHED}) {\n            id\n            title\n            contents\n            createdAt\n        }\n    }\n`\n\n// IDで1件取得\nexport const FEACH_COMMENT_BY_ID = gql`\n    query feachCommentById($id: ID!) {\n        comments(where: { id: $id }) {\n            title\n            contents\n            createdAt\n        }\n    }\n`\n\n// postモデルのレコード数を取得\nexport const MAX_COMMENT_COUNT = gql`\n    query maxCommentCount{\n        commentsConnection {\n            aggregate {\n                count\n            }\n        }\n    }\n`\n\n// postモデルのレコードの追加\nexport const CREATE_COMMENT = gql`\n    mutation createComments($title: String, $contents: String) {\n        createComment(data: {status: PUBLISHED, title: $title, contents: $contents}) {\n            title: title\n            contents: contents\n        }\n    }\n`","<template>\n  <v-container>\n    <v-layout row wrap>\n      <v-flex xs12 sm6 offset-sm3>\n        <section>\n          <!--アラート-->\n          <v-alert\n              :value=\"alertDisplay\"\n              type=\"success\"\n              transition=\"slide-y-transition\"\n              outline\n          >\n            Comment was successful\n          </v-alert>\n\n          <!--コメントフォーム-->\n          <v-card>\n            <v-container>\n              <h1>CommentForm</h1>\n              <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                <v-text-field\n                    v-model=\"title\"\n                    :rules=\"titleRules\"\n                    :counter=\"20\"\n                    label=\"Title\"\n                    required\n                ></v-text-field>\n                <v-textarea\n                    v-model=\"contents\"\n                    :rules=\"contentsRules\"\n                    label=\"Contents\"\n                    required\n                    flat\n                    counter\n                ></v-textarea>\n                <v-btn\n                    :disabled=\"!valid\"\n                    @click=\"createPost\"\n                >\n                  submit\n                </v-btn>\n                <v-btn @click=\"clear\">clear</v-btn>\n              </v-form>\n            </v-container>\n          </v-card>\n        </section>\n      </v-flex>\n    </v-layout>\n\n    <!--コメント一覧-->\n\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"comments\"\n        hide-actions\n        class=\"elevation-1\"\n        :loading=\"progress\"\n    >\n      <v-progress-linear slot=\"progress\" color=\"blue\" indeterminate></v-progress-linear>\n      <template slot=\"items\" slot-scope=\"props\">\n        <td>{{ props.item.createdAt | moment(\"YYYY-MM-DD HH:MM:SS\") }}</td>\n        <td class=\"text-xs-right\">{{ props.item.title }}</td>\n        <td class=\"text-xs-right\">{{ props.item.contents }}</td>\n      </template>\n    </v-data-table>\n\n  </v-container>\n</template>\n\n<script>\n  import {ALL_COMMENTS, CREATE_COMMENT} from \"../constants/comment-graphql\";\n\n  export default {\n    name: \"CreatePost\",\n    data: () => ({\n      valid: true,\n      title: '',\n      titleRules: [\n        v => !!v || 'Title is required',\n        v => (v && v.length <= 20) || 'Title must be less than 20 characters'\n      ],\n      contents: '',\n      contentsRules: [\n        v => !!v || 'Content is required',\n      ],\n      comments: [],\n      headers: [\n        {text: 'createdAt', value: 'createdAt'},\n        {text: 'title', value: 'title'},\n        {text: 'contents', value: 'contents'}\n      ],\n      error: \"desu\",\n      progress: false,\n      alertDisplay: false,\n    }),\n    methods: {\n      createPost: function () {\n        if (this.$refs.form.validate()) {\n          this.progress = true\n          this.$apollo.mutate({\n            mutation: CREATE_COMMENT,\n            variables: {\n              title: this.title,\n              contents: this.contents,\n            }\n          }).then((data) => {\n            this.$apollo.queries.comments.fetchMore({\n              updateQuery: (previousResult, {fetchMoreResult}) => {\n                this.clear()\n                this.showAlert()\n                this.progress = false\n                return {\n                  comments: fetchMoreResult.comments\n                }\n              }\n            })\n          }).catch((error) => {\n            this.error = error\n          })\n        }\n      },\n      clear: function () {\n        this.$refs.form.reset()\n      },\n      showAlert: function () {\n        this.alertDisplay = true\n        let self = this\n        setTimeout(function () {\n          self.alertDisplay = false\n        }, 3000);\n      },\n    },\n    apollo: {\n      comments: ALL_COMMENTS\n    }\n  }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateComment.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateComment.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreateComment.vue?vue&type=template&id=55e2df8c&\"\nimport script from \"./CreateComment.vue?vue&type=script&lang=js&\"\nexport * from \"./CreateComment.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"CreateComment.vue\"\nexport default component.exports"],"sourceRoot":""}