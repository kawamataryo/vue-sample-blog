{"version":3,"sources":["webpack:///./src/views/CreateComment.vue?1c76","webpack:///./src/constants/comment-graphql.js","webpack:///src/views/CreateComment.vue","webpack:///./src/views/CreateComment.vue?4e26","webpack:///./src/views/CreateComment.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","max-width","model","value","callback","$$v","dialog","expression","_v","ref","lazy-validation","valid","rules","titleRules","counter","label","required","title","contentsRules","flat","contents","disabled","on","click","createComment","clear","color","staticClass","dark","showDialog","headers","items","comments","hide-actions","loading","progress","scopedSlots","_u","key","fn","props","_s","_f","item","createdAt","small","outline","$event","updateComment","deleteComment","id","slot","indeterminate","staticRenderFns","ALL_COMMENTS","gql","_templateObject","CREATE_COMMENT","_templateObject2","_templateObject3","_templateObject4","DELETE_COMMENT","_templateObject5","UPDATE_COMMENT","_templateObject6","CreateCommentvue_type_script_lang_js_","name","data","v","length","text","sortable","error","methods","_this","$refs","form","validate","$apollo","mutate","mutation","variables","then","queries","fetchMore","updateQuery","previousResult","_ref","fetchMoreResult","showAlert","catch","_this2","confirm","_ref2","_this3","_ref3","reset","alertDisplay","self","setTimeout","apollo","views_CreateCommentvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0d2fa2.b4bf459d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-dialog',{attrs:{\"max-width\":\"500px\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',[_c('v-container',[_c('h1',[_vm._v(\"CommentForm\")]),_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-text-field',{attrs:{\"rules\":_vm.titleRules,\"counter\":20,\"label\":\"Title\",\"required\":\"\"},model:{value:(_vm.title),callback:function ($$v) {_vm.title=$$v},expression:\"title\"}}),_c('v-textarea',{attrs:{\"rules\":_vm.contentsRules,\"label\":\"Contents\",\"required\":\"\",\"flat\":\"\",\"counter\":\"\"},model:{value:(_vm.contents),callback:function ($$v) {_vm.contents=$$v},expression:\"contents\"}}),_c('v-btn',{attrs:{\"disabled\":!_vm.valid},on:{\"click\":_vm.createComment}},[_vm._v(\"\\n            save\\n          \")]),_c('v-btn',{on:{\"click\":_vm.clear}},[_vm._v(\"clear\")])],1)],1)],1)],1),_c('v-toolbar',{attrs:{\"flat\":\"\",\"color\":\"white\"}},[_c('v-toolbar-title',[_vm._v(\"CRUD demo\")]),_c('v-spacer'),_c('v-btn',{staticClass:\"mb-2\",attrs:{\"color\":\"primary\",\"dark\":\"\"},on:{\"click\":_vm.showDialog}},[_vm._v(\"New Item\")])],1),_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":_vm.comments,\"hide-actions\":\"\",\"loading\":_vm.progress},scopedSlots:_vm._u([{key:\"items\",fn:function(props){return [_c('td',[_vm._v(_vm._s(_vm._f(\"moment\")(props.item.createdAt,\"YYYY-MM-DD HH:MM:SS\")))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.title))]),_c('td',{staticClass:\"text-xs-right\"},[_vm._v(_vm._s(props.item.contents))]),_c('td',{staticClass:\"justify-center layout px-0\"},[_c('v-btn',{attrs:{\"color\":\"success\",\"small\":\"\",\"outline\":\"\",\"flat\":\"\"},on:{\"click\":function($event){_vm.updateComment(props.item)}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"\\n            fa-edit\\n          \")])],1),_c('v-btn',{attrs:{\"color\":\"error\",\"small\":\"\",\"outline\":\"\",\"flat\":\"\"},on:{\"click\":function($event){_vm.deleteComment(props.item.id)}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"\\n            fa-trash\\n          \")])],1)],1)]}}])},[_c('v-progress-linear',{attrs:{\"slot\":\"progress\",\"color\":\"blue\",\"indeterminate\":\"\"},slot:\"progress\"})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import gql from 'graphql-tag'\n\n// すべてのコメントを取得\nexport const ALL_COMMENTS = gql`\n    query allCusto {\n        comments(where: {status: PUBLISHED}) {\n            id\n            title\n            contents\n            createdAt\n        }\n    }\n`\n\n// IDで1件取得\nexport const FEACH_COMMENT_BY_ID = gql`\n    query feachCommentById($id: ID!) {\n        comments(where: { id: $id }) {\n            title\n            contents\n            createdAt\n        }\n    }\n`\n\n// commentモデルのレコード数を取得\nexport const MAX_COMMENT_COUNT = gql`\n    query maxCommentCount{\n        commentsConnection {\n            aggregate {\n                count\n            }\n        }\n    }\n`\n\n// commentモデルのレコードの追加\nexport const CREATE_COMMENT = gql`\n    mutation createComment($title: String, $contents: String) {\n        createComment(data: {status: PUBLISHED, title: $title, contents: $contents}) {\n            title: title\n            contents: contents\n        }\n    }\n`\n\n// commentモデルのレコード削除\nexport const DELETE_COMMENT = gql`\n    mutation deleteComment($id: ID) {\n        deleteComment(where:{id: $id}){\n            id\n        }\n    }\n`\n\n// commentモデルのレコード更新\nexport const UPDATE_COMMENT = gql`\n    mutation updateComment($id: ID, $title: String, $contents: String) {\n        updateComment(data: {title: $title, contents: $contents}, where:{id:$id}) {\n            title\n            contents\n        }\n    }\n`","<template>\n  <v-container>\n    <!--コメントフォーム-->\n    <v-dialog v-model=\"dialog\" max-width=\"500px\">\n      <v-card>\n        <v-container>\n          <h1>CommentForm</h1>\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n            <v-text-field\n                v-model=\"title\"\n                :rules=\"titleRules\"\n                :counter=\"20\"\n                label=\"Title\"\n                required\n            ></v-text-field>\n            <v-textarea\n                v-model=\"contents\"\n                :rules=\"contentsRules\"\n                label=\"Contents\"\n                required\n                flat\n                counter\n            ></v-textarea>\n            <v-btn\n                :disabled=\"!valid\"\n                @click=\"createComment\"\n            >\n              save\n            </v-btn>\n            <v-btn @click=\"clear\">clear</v-btn>\n          </v-form>\n        </v-container>\n      </v-card>\n    </v-dialog>\n\n\n    <!--ツールバー-->\n    <v-toolbar flat color=\"white\">\n      <v-toolbar-title>CRUD demo</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" dark class=\"mb-2\" @click=\"showDialog\">New Item</v-btn>\n    </v-toolbar>\n\n    <!--コメント一覧-->\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"comments\"\n        hide-actions\n        class=\"elevation-1\"\n        :loading=\"progress\"\n    >\n      <v-progress-linear slot=\"progress\" color=\"blue\" indeterminate></v-progress-linear>\n      <template slot=\"items\" slot-scope=\"props\">\n        <td>{{ props.item.createdAt | moment(\"YYYY-MM-DD HH:MM:SS\") }}</td>\n        <td class=\"text-xs-right\">{{ props.item.title }}</td>\n        <td class=\"text-xs-right\">{{ props.item.contents }}</td>\n        <td class=\"justify-center layout px-0\">\n          <v-btn\n              color=\"success\"\n              small\n              outline\n              flat\n              @click=\"updateComment(props.item)\"\n          >\n            <v-icon small>\n              fa-edit\n            </v-icon>\n          </v-btn>\n          <v-btn\n              color=\"error\"\n              small\n              outline\n              flat\n              @click=\"deleteComment(props.item.id)\"\n          >\n            <v-icon small>\n              fa-trash\n            </v-icon>\n          </v-btn>\n        </td>\n      </template>\n    </v-data-table>\n\n  </v-container>\n</template>\n\n<script>\n  import {ALL_COMMENTS, CREATE_COMMENT, DELETE_COMMENT, UPDATE_COMMENT} from \"../constants/comment-graphql\";\n\n  export default {\n    name: \"CreatePost\",\n    data: () => ({\n      valid: true,\n      title: '',\n      titleRules: [\n        v => !!v || 'Title is required',\n        v => (v && v.length <= 20) || 'Title must be less than 20 characters'\n      ],\n      contents: '',\n      contentsRules: [\n        v => !!v || 'Content is required',\n      ],\n      comments: [],\n      headers: [\n        {text: 'createdAt', value: 'createdAt'},\n        {text: 'title', value: 'title'},\n        {text: 'contents', value: 'contents'},\n        {text: 'Actions', value: 'name', sortable: false}\n      ],\n      error: \"desu\",\n      progress: false,\n      dialog: false,\n    }),\n    methods: {\n      createComment: function () {\n        if (this.$refs.form.validate()) {\n          this.progress = true\n          this.$apollo.mutate({\n            mutation: CREATE_COMMENT,\n            variables: {\n              title: this.title,\n              contents: this.contents,\n            }\n          }).then(() => {\n            this.$apollo.queries.comments.fetchMore({\n              updateQuery: (previousResult, {fetchMoreResult}) => {\n                this.clear()\n                this.showAlert()\n                return {\n                  comments: fetchMoreResult.comments\n                }\n              }\n            })\n            this.dialog = false\n            this.progress = false\n          }).catch((error) => {\n            this.error = error\n          })\n        }\n      },\n      deleteComment: function (id) {\n        if (!confirm('Are you sure you want to delete this comment?')) {\n          return\n        }\n        this.progress = true\n        this.$apollo.mutate({\n          mutation: DELETE_COMMENT,\n          variables: {\n            id: id\n          }\n        }).then(() => {\n          this.$apollo.queries.comments.fetchMore({\n            updateQuery: (previousResult, {fetchMoreResult}) => {\n              return {\n                comments: fetchMoreResult.comments\n              }\n            }\n          })\n          this.progress = false\n        }).catch((error) => {\n          this.error = error\n        })\n      },\n      updateComment: function (item) {\n        let id = item.id\n        let title = item.title\n        let contents = item.contents\n        this.$apollo.mutate({\n          mutation: UPDATE_COMMENT,\n          variables: {\n            id: id,\n            title: title,\n            contents: contents\n          }\n        }).then(() => {\n          this.$apollo.queries.comments.fetchMore({\n            updateQuery: (previousResult, {fetchMoreResult}) => {\n              return {\n                comments: fetchMoreResult.comments\n              }\n            }\n          })\n          this.progress = false\n        }).catch((error) => {\n          this.error = error\n        })\n      },\n      clear: function () {\n        this.$refs.form.reset()\n      },\n      showAlert: function () {\n        this.alertDisplay = true\n        let self = this\n        setTimeout(function () {\n          self.alertDisplay = false\n        }, 3000);\n      },\n      showDialog: function () {\n        this.dialog = true\n      }\n    },\n    apollo: {\n      comments: ALL_COMMENTS\n    }\n  }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateComment.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CreateComment.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CreateComment.vue?vue&type=template&id=7aeca9b4&\"\nimport script from \"./CreateComment.vue?vue&type=script&lang=js&\"\nexport * from \"./CreateComment.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"CreateComment.vue\"\nexport default component.exports"],"sourceRoot":""}